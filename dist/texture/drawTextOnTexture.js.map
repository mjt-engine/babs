{"version":3,"file":"drawTextOnTexture.js","sourceRoot":"","sources":["../../src/texture/drawTextOnTexture.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAE3C,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,OAAuB,EACvB,IAAY,EAEZ,UAWK,EAAE,EACP,EAAE;IACF,MAAM,EACJ,eAAe,EACf,OAAO,GAAG,IAAI,EACd,KAAK,GAAG,OAAO,EACf,UAAU,GAAG,WAAW,EACxB,SAAS,GAAG,MAAM,EAClB,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EACvE,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,GAC1E,GAAG,OAAO,CAAC;IACZ,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxB,IAAI,QAAQ,GAAG,WAAW,CAAC;IAC3B,IAAI,IAAI,GAAG,GAAG,SAAS,IAAI,QAAQ,MAAM,UAAU,EAAE,CAAC;IACtD,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;IAEjC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;IACvD,IAAI,GAAG,GAAG,SAAS,IAAI,QAAQ,MAAM,UAAU,EAAE,CAAC;IAClD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;IAChB,MAAM,KAAK,GAAG,CAAC,CAAC;IAChB,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChC,iBAAiB;IACjB,MAAM,GAAG,GAAG,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAClD,MAAM,KAAK,GAAG,WAAW,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACpD,GAAG,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,CAAC;IAE7B,MAAM,IAAI,GAAG;QACX,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,KAAK,GAAG,QAAQ;QACnB,KAAK,EAAE,WAAW;QAClB,MAAM,EAAE,GAAG,GAAG,CAAC;KAChB,CAAC;IACF,IAAI,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC;QAC/B,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACrC,2DAA2D;QAC3D,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IACD,IAAI,OAAO,EAAE,CAAC;QACZ,GAAG,CAAC,WAAW,GAAG,YAAY,CAAC;QAC/B,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IACD,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;IACtB,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAEjC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxB,OAAO,CAAC,MAAM,EAAE,CAAC;IACjB,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import type { DynamicTexture } from \"@babylonjs/core/Materials/Textures/dynamicTexture\";\nimport { Colors } from \"@mjt-engine/color\";\nimport type { Point3 } from \"@mjt-engine/math\";\nimport { isDefined } from \"@mjt-engine/object\";\n\nexport const drawTextOnTexture = (\n  texture: DynamicTexture,\n  text: string,\n\n  options: Partial<{\n    color: string;\n    outline: boolean;\n    outlineColor: string;\n    backgroundColor: string;\n    text: string;\n    textureSize: number;\n    textScale: number;\n    rotation: Point3;\n    fontFamily: string;\n    fontStyle: string;\n  }> = {}\n) => {\n  const {\n    backgroundColor,\n    outline = true,\n    color = \"black\",\n    fontFamily = \"monospace\",\n    fontStyle = \"bold\",\n    outlineColor = Colors.builder({ color: \"white\" }).alpha(0.1).toString(),\n    textureSize = Math.min(texture.getSize().width, texture.getSize().height),\n  } = options;\n  texture.hasAlpha = true;\n  let fontSize = textureSize;\n  let font = `${fontStyle} ${fontSize}px ${fontFamily}`;\n  const ctx = texture.getContext();\n\n  ctx.font = font;\n  let measure = ctx.measureText(text);\n  fontSize = (textureSize / measure.width) * textureSize;\n  font = `${fontStyle} ${fontSize}px ${fontFamily}`;\n  ctx.font = font;\n  const textX = 0;\n  measure = ctx.measureText(text);\n  /** @ts-ignore */\n  const top = measure[\"fontBoundingBoxAscent\"] ?? 0;\n  const textY = textureSize - (textureSize - top) / 2;\n  ctx.lineWidth = fontSize / 2;\n\n  const bbox = {\n    x: 0,\n    y: textY - fontSize,\n    width: textureSize,\n    height: top * 2,\n  };\n  if (isDefined(backgroundColor)) {\n    ctx.fillStyle = Colors.from(backgroundColor).toString();\n    const { x, y, width, height } = bbox;\n    // ctx.fillRect(0, textY - fontSize, textureSize, top * 2);\n    ctx.fillRect(x, y, width, height);\n  }\n  if (outline) {\n    ctx.strokeStyle = outlineColor;\n    ctx.strokeText(text, textX, textY);\n  }\n  ctx.fillStyle = color;\n  ctx.fillText(text, textX, textY);\n\n  texture.hasAlpha = true;\n  texture.update();\n  return bbox;\n};\n"]}