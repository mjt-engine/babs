{"version":3,"file":"helloWorld.js","sourceRoot":"","sources":["../../src/bab/helloWorld.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAE9C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,SAAiB,YAAY,EAAE,EAAE,EAAE;IAC5D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAChC,MAAM,MAAM,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;IAE3C,MAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC/D,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACnC,MAAM,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE;QAC1C,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE;QAChC,MAAM,EAAE,GAAG;KACZ,CAAC,CAAC;IACH,0BAA0B;IAC1B,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IAC/B,MAAO,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE;QACvB,SAAS;QACT,IAAI,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,KAAK,EAAE,EAAE,CAAC;YACpC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3B,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;gBAChB,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC,CAAC;IAEF,2BAA2B;IAC3B,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE;QACxB,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import type { Engine } from \"@babylonjs/core/Engines/engine\";\nimport { Cameras } from \"../camera/Cameras\";\nimport { Lights } from \"../light/Lights\";\nimport { Meshes } from \"../mesh/Meshes\";\nimport { createEngine } from \"./createEngine\";\nimport { Scene } from \"@babylonjs/core/scene\";\n\nexport const helloWorld = (engine: Engine = createEngine()) => {\n  const scene = new Scene(engine);\n  const canvas = engine.getRenderingCanvas();\n\n  const camera = Cameras.getArcRotateCamera(scene, \"Camera\", {});\n  camera.attachControl(canvas, true);\n  Lights.getHemisphericLight(scene, \"light1\", {\n    direction: [1, 1, 1],\n  });\n  Meshes.getSphere(scene, \"sphere\", {\n    radius: 0.5,\n  });\n  // hide/show the Inspector\n  const STATE = { debug: false };\n  canvas!.onkeyup = (ev) => {\n    // ctrl+I\n    if (ev.ctrlKey && ev.keyCode === 73) {\n      STATE.debug = !STATE.debug;\n      if (STATE.debug) {\n        scene.debugLayer.hide();\n      } else {\n        console.log(\"SHOW!\");\n        scene.debugLayer.show();\n      }\n    }\n  };\n\n  // run the main render loop\n  engine.runRenderLoop(() => {\n    scene.render();\n  });\n  return scene;\n};\n"]}