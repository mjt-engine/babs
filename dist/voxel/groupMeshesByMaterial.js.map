{"version":3,"file":"groupMeshesByMaterial.js","sourceRoot":"","sources":["../../src/voxel/groupMeshesByMaterial.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,MAAc,EAAE,EAAE;IACtD,MAAM,MAAM,GAA2B,EAAE,CAAC;IAE1C,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACtB,MAAM,YAAY,GAAG,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;QAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,+BAA+B,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACpE,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;IAChC,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { Mesh } from \"@babylonjs/core/Meshes/mesh\";\n\nexport const groupMeshesByMaterial = (meshes: Mesh[]) => {\n  const result: Record<string, Mesh[]> = {};\n\n  meshes.forEach((mesh) => {\n    const materialName = mesh?.material?.name;\n    if (!materialName) {\n      throw new Error(\"Mesh material is missing name\", { cause: mesh });\n    }\n    const meshes = result[materialName] ?? [];\n    meshes.push(mesh);\n    result[materialName] = meshes;\n  });\n  return result;\n};\n"]}