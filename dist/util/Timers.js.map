{"version":3,"file":"Timers.js","sourceRoot":"","sources":["../../src/util/Timers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAE5D,IAAI,KAAK,GAAG,CAAC,CAAC;AAEd,MAAM,KAAK,GAAG,kCAAkC,CAAC;AACjD,MAAM,CAAC,MAAM,OAAO,GAAG,KAAK,CAAC;AAC7B,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,KAAa,EAAE,EAAE;IACzC,MAAM,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACvC,KAAK,IAAI,CAAC,CAAC;IACX,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;IACxB,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAEzB,OAAO,CAAC,UAAmB,EAAE,EAAE;QAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;QAChC,MAAM,eAAe,GAAG,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5D,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,CAAC,KAAK,eAAe,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACvE,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC5B,KAAK,IAAI,CAAC,CAAC;YACb,CAAC;QACH,CAAC;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,4DAA4D;AAC5D,iCAAiC;AACjC,4BAA4B;AAC5B,kBAAkB;AAClB,iBAAiB;AAEjB,MAAM,UAAU,IAAI,CAAI,IAAa,EAAE,KAAK,GAAG,IAAI,CAAC,IAAI;IACtD,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5B,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC;IACtB,EAAE,EAAE,CAAC;IACL,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,KAAK,CACzB,IAAsB,EACtB,KAAK,GAAG,IAAI,CAAC,IAAI;IAEjB,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5B,MAAM,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAC5B,EAAE,EAAE,CAAC;IACL,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,IAAI;IACJ,KAAK;CACN,CAAC","sourcesContent":["import { isDefined, isUndefined } from \"@mjt-engine/object\";\n\nlet depth = 0;\n\nconst STYLE = \"background: #222; color: #bada55\";\nexport const enabled = false;\nexport const stopwatch = (label: string) => {\n  const padding = \"\".padStart(depth * 2);\n  depth += 1;\n  label = padding + label;\n  if (enabled) {\n    console.log(`%c${label} start`, STYLE);\n  }\n\n  const start = Date.now();\n\n  return (checkpoint?: string) => {\n    const time = Date.now() - start;\n    const labelCheckpoint = [label, checkpoint ?? \"\"].join(\" \");\n    if (enabled) {\n      console.log(`%c${labelCheckpoint} ${(time / 1000).toFixed(2)}`, STYLE);\n      if (isUndefined(checkpoint)) {\n        depth -= 1;\n      }\n    }\n  };\n};\n\n// export function time<T>(expr: () => T, label: string): T;\n// export async function time<T>(\n//   expr: () => Promise<T>,\n//   label: string\n// ): Promise<T>;\n\nexport function time<T>(expr: () => T, label = expr.name): T {\n  const sw = stopwatch(label);\n  const result = expr();\n  sw();\n  return result;\n}\n\nexport async function timeP<T>(\n  expr: () => Promise<T>,\n  label = expr.name\n): Promise<T> {\n  const sw = stopwatch(label);\n  const result = await expr();\n  sw();\n  return result;\n}\n\nexport const Timers = {\n  time,\n  timeP,\n};\n"]}