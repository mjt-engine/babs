{"version":3,"file":"getTorusKnot.js","sourceRoot":"","sources":["../../src/mesh/getTorusKnot.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AAEjE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,KAAY,EACZ,IAAY,EACZ,UAIO,EAAE,EACT,EAAE;IACF,OAAO,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;QAC/B,MAAM,EAAE,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC;QACjC,MAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;QAClE,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { MeshBuilder } from \"@babylonjs/core/Meshes/meshBuilder\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { getMesh } from \"./getMesh\";\nimport type { MeshOptions } from \"./updateMesh\";\nimport { updateMesh } from \"./updateMesh\";\n\nexport const getTorusKnot = (\n  scene: Scene,\n  name: string,\n  options: MeshOptions &\n    Partial<{\n      radius: number;\n      material: string;\n    }> = {}\n) => {\n  return getMesh(scene, name, () => {\n    const { radius = 0.5 } = options;\n    const mesh = MeshBuilder.CreateTorusKnot(name, { radius }, scene);\n    updateMesh(scene, mesh, options);\n    return mesh;\n  });\n};\n"]}