{"version":3,"file":"getMeshAsync.js","sourceRoot":"","sources":["../../src/mesh/getMeshAsync.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,KAAY,EACZ,IAAY,EACZ,QAA0B,EACd,EAAE;IACd,MAAM,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;QACzB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAe,CAAC;IAClD,CAAC;IACD,OAAO,QAAQ,EAAE,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import type { InstancedMesh } from \"@babylonjs/core/Meshes/instancedMesh\";\nimport type { Mesh } from \"@babylonjs/core/Meshes/mesh\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { isDefined } from \"@mjt-engine/object\";\n\nexport const getMeshAsync = <T extends Mesh | InstancedMesh>(\n  scene: Scene,\n  name: string,\n  producer: () => Promise<T>\n): Promise<T> => {\n  const meshMaybe = scene.getMeshByName(name);\n  if (isDefined(meshMaybe)) {\n    return Promise.resolve(meshMaybe) as Promise<T>;\n  }\n  return producer();\n};\n"]}