{"version":3,"file":"getSphere.js","sourceRoot":"","sources":["../../src/mesh/getSphere.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AAEjE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,KAAY,EACZ,IAAY,EACZ,OAGI,EACJ,EAAE;IACF,MAAM,EAAE,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC;IAEjC,OAAO,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;QAC/B,MAAM,IAAI,GAAG,WAAW,CAAC,YAAY,CACnC,IAAI,EACJ,EAAE,QAAQ,EAAE,MAAM,GAAG,CAAC,EAAE,EACxB,KAAK,CACN,CAAC;QACF,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { MeshBuilder } from \"@babylonjs/core/Meshes/meshBuilder\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { getMesh } from \"./getMesh\";\nimport type { MeshOptions } from \"./updateMesh\";\nimport { updateMesh } from \"./updateMesh\";\n\nexport const getSphere = (\n  scene: Scene,\n  name: string,\n  options: MeshOptions &\n    Partial<{\n      radius: number;\n    }>\n) => {\n  const { radius = 0.5 } = options;\n\n  return getMesh(scene, name, () => {\n    const mesh = MeshBuilder.CreateSphere(\n      name,\n      { diameter: radius * 2 },\n      scene\n    );\n    updateMesh(scene, mesh, options);\n    return mesh;\n  });\n};\n"]}