{"version":3,"file":"updateStandardMaterial.js","sourceRoot":"","sources":["../../src/material/updateStandardMaterial.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,GAAG,EAAE,MAAM,oBAAoB,CAAC;AACzC,OAAO,EAAE,EAAE,EAAE,MAAM,WAAW,CAAC;AAG/B,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,KAAY,EACZ,QAA0B,EAC1B,OAA2B,EAC3B,EAAE;IACF,MAAM,EACJ,KAAK,EACL,cAAc,EACd,eAAe,EACf,cAAc,EACd,cAAc,EACd,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,aAAa,GACd,GAAG,OAAO,CAAC;IAEZ,GAAG,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;QAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC9C,QAAQ,CAAC,cAAc,GAAG,OAAO,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,EAAE;QAC7B,MAAM,OAAO,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC9C,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;QAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC9C,QAAQ,CAAC,cAAc,GAAG,OAAO,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;QAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC9C,QAAQ,CAAC,cAAc,GAAG,OAAO,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE;QAC1B,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;QAC9C,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;YACnB,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC;QAC9B,CAAC;IACH,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE;QAC3B,QAAQ,CAAC,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE;QAC1B,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE;QAC3B,QAAQ,CAAC,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;QACnB,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IACzB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { Colors } from \"@mjt-engine/color\";\nimport { iff } from \"@mjt-engine/object\";\nimport { c3 } from \"../bab/c3\";\nimport type { AllMaterialOptions } from \"./Materials\";\n\nexport const updateStandardMaterial = (\n  scene: Scene,\n  material: StandardMaterial,\n  options: AllMaterialOptions\n) => {\n  const {\n    alpha,\n    diffuseTexture,\n    emissiveTexture,\n    ambientTexture,\n    opacityTexture,\n    diffuseColor,\n    specularColor,\n    ambientColor,\n    emissiveColor,\n  } = options;\n\n  iff(diffuseTexture, (value) => {\n    const texture = scene.getTextureByName(value);\n    material.diffuseTexture = texture;\n  });\n  iff(emissiveTexture, (value) => {\n    const texture = scene.getTextureByName(value);\n    material.emissiveTexture = texture;\n  });\n  iff(ambientTexture, (value) => {\n    const texture = scene.getTextureByName(value);\n    material.ambientTexture = texture;\n  });\n  iff(opacityTexture, (value) => {\n    const texture = scene.getTextureByName(value);\n    material.opacityTexture = texture;\n  });\n  iff(diffuseColor, (value) => {\n    material.diffuseColor = c3(value);\n    const colorAlpha = Colors.from(value).alpha();\n    if (colorAlpha < 1) {\n      material.alpha = colorAlpha;\n    }\n  });\n  iff(specularColor, (value) => {\n    material.specularColor = c3(value);\n  });\n  iff(ambientColor, (value) => {\n    material.ambientColor = c3(value);\n  });\n  iff(emissiveColor, (value) => {\n    material.specularColor = c3(value);\n  });\n\n  iff(alpha, (value) => {\n    material.alpha = value;\n  });\n};\n"]}