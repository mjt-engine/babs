{"version":3,"file":"getGlowLayer.js","sourceRoot":"","sources":["../../src/layer/getGlowLayer.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,GAEV,MAAM,kCAAkC,CAAC;AAE1C,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,KAAY,EACZ,IAAY,EACZ,OAA2B,EAC3B,EAAE;IACF,uCAAuC;IACvC,MAAM,UAAU,GAAG,KAAK,EAAE,YAAY,EAAE,MAAM;QAC5C,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC;QAChC,CAAC,CAAC,SAAS,CAAC;IACd,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;QAC1B,OAAO,UAAU,CAAC;IACpB,CAAC;IACD,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC,CAAC","sourcesContent":["import {\n  GlowLayer,\n  type IGlowLayerOptions,\n} from \"@babylonjs/core/Layers/glowLayer\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { isDefined } from \"@mjt-engine/object\";\n\nexport const getGlowLayer = (\n  scene: Scene,\n  name: string,\n  options?: IGlowLayerOptions\n) => {\n  // workaround Bug in getGlowlayerbyName\n  const layerMaybe = scene?.effectLayers?.length\n    ? scene.getGlowLayerByName(name)\n    : undefined;\n  if (isDefined(layerMaybe)) {\n    return layerMaybe;\n  }\n  return new GlowLayer(name, scene, options);\n};\n"]}