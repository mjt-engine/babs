{"version":3,"file":"getLight.js","sourceRoot":"","sources":["../../src/light/getLight.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,KAAY,EACZ,IAAY,EACZ,QAAiB,EACjB,EAAE;IACF,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;QACrB,OAAO,KAAU,CAAC;IACpB,CAAC;IACD,OAAO,QAAQ,EAAE,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import type { Light } from \"@babylonjs/core/Lights/light\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { isDefined } from \"@mjt-engine/object\";\n\nexport const getLight = <T extends Light>(\n  scene: Scene,\n  name: string,\n  producer: () => T\n) => {\n  const light = scene.getLightByName(name);\n  if (isDefined(light)) {\n    return light as T;\n  }\n  return producer();\n};\n"]}