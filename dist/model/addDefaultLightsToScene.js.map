{"version":3,"file":"addDefaultLightsToScene.js","sourceRoot":"","sources":["../../src/model/addDefaultLightsToScene.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yCAAyC,CAAC;AAC3E,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAE/D,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,EAAE,EAAE,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,EAAE,EAAE,MAAM,WAAW,CAAC;AAE/B,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,KAAY,EAAE,EAAE;IACtD,CAAC;QACC,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACxD,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,OAAO;IACP,CAAC;QACC,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvD,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;IACtB,CAAC;IACD,OAAO;IACP,CAAC;QACC,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvD,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/B,KAAK,CAAC,OAAO,GAAG,EAAE,CAChB,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CACzD,CAAC;QACF,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;IACtB,CAAC;IACD,QAAQ;IACR,CAAC;QACC,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACxD,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,KAAK,CAAC,OAAO,GAAG,EAAE,CAChB,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAC1D,CAAC;QACF,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;IACtB,CAAC;IACD,QAAQ;IACR,IAAI;IACJ,6DAA6D;IAC7D,oCAAoC;IACpC,mFAAmF;IACnF,2BAA2B;IAC3B,IAAI;AACN,CAAC,CAAC","sourcesContent":["import { HemisphericLight } from \"@babylonjs/core/Lights/hemisphericLight\";\nimport { PointLight } from \"@babylonjs/core/Lights/pointLight\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport { Colors } from \"@mjt-engine/color\";\nimport { c3 } from \"../bab/c3\";\nimport { v3 } from \"../bab/v3\";\n\nexport const addDefaultLightsToScene = (scene: Scene) => {\n  {\n    const light = new HemisphericLight(\"hemi\", v3(), scene);\n    light.intensity = 0.3;\n  }\n\n  // back\n  {\n    const light = new PointLight(\"backlight\", v3(), scene);\n    light.position = v3(0, 2, -3);\n    light.intensity = 1;\n  }\n  // left\n  {\n    const light = new PointLight(\"leftlight\", v3(), scene);\n    light.position = v3(1, 1.5, 1);\n    light.diffuse = c3(\n      Colors.builder({ color: \"red\" }).lighten(0.8).toString()\n    );\n    light.intensity = 3;\n  }\n  // right\n  {\n    const light = new PointLight(\"rightlight\", v3(), scene);\n    light.position = v3(-1, 2, 1);\n    light.diffuse = c3(\n      Colors.builder({ color: \"blue\" }).lighten(0.8).toString()\n    );\n    light.intensity = 1;\n  }\n  // front\n  // {\n  //   const light = new PointLight(\"frontlight\", v3(), scene);\n  //   light.position = v3(0, 1.5, 1);\n  //   // light.diffuse = c3(Colors.builder({ color: \"red\" }).lighten(1).toString());\n  //   light.intensity = 0.5;\n  // }\n};\n"]}