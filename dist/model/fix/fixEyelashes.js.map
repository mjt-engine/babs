{"version":3,"file":"fixEyelashes.js","sourceRoot":"","sources":["../../../src/model/fix/fixEyelashes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,kCAAkC,CAAC;AAI1D,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAAY,EAAE,EAAE;IAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9C,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3C,wEAAwE;YACxE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAyB,CAAC;gBAChD,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACd,MAAM,IAAI,KAAK,CAAC,sBAAsB,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC3D,CAAC;gBACD,MAAM,OAAO,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC;gBAChD,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACxB,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC/B,QAAQ,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBAC9B,QAAQ,CAAC,cAAc,GAAG,OAAO,CAAC;gBAClC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,QAAQ,CAAC,WAAW,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Color3 } from \"@babylonjs/core/Maths/math.color\";\nimport type { Scene } from \"@babylonjs/core/scene\";\nimport type { ModelMaterial } from \"../ModelBuilder\";\n\nexport const fixEyelashes = (scene: Scene) => {\n  console.log(\"fixing eyelashes\", scene.meshes);\n  scene.meshes.forEach((mesh) => {\n    if (mesh.name.includes(\"Eyelashes\")) {\n      console.log(\"fixing eyelashes\", mesh.name);\n      // mesh.setEnabled(false); // TODO re-enable eyelashes when morphs fixed\n      if (mesh.name.includes(\"primitive1\")) {\n        console.log(\"fixing eyelashes: primitive1\", mesh.name);\n        const material = mesh.material as ModelMaterial;\n        if (!material) {\n          throw new Error(\"Mesh has no material\", { cause: mesh });\n        }\n        const texture = material.getActiveTextures()[0];\n        texture.hasAlpha = true;\n        texture.getAlphaFromRGB = true;\n        material.transparencyMode = 1;\n        material.opacityTexture = texture;\n        mesh.visibility = 0.5;\n        material.albedoColor = new Color3(0, 0, 0);\n      }\n    }\n  });\n};\n"]}