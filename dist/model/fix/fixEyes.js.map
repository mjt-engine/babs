{"version":3,"file":"fixEyes.js","sourceRoot":"","sources":["../../../src/model/fix/fixEyes.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial\";\nimport type { AbstractMesh } from \"@babylonjs/core/Meshes/abstractMesh\";\nimport { isDefined } from \"@mjt-engine/object\";\nexport const HIDE = [\n  // \"Irises\",\n  // \"Pupils\",\n  // \"Sclera\", // 'red' of the eye\n  // \"Cornea\",\n  // \"Eyelashes\",\n  // \"EyeMoisture\",\n  // \"EyeSocket\",\n  // \"Face\",\n  // \"Teeth\",\n  // \"Lips\",\n  // \"Mouth\",\n  // \"Ears\",\n  // \"Torso\",\n];\n\nexport const GLOSS = [\n  \"Irises\",\n  \"Pupils\",\n  \"Sclera\",\n  // \"Eyelashes\",\n  // \"EyeSocket\",\n  // \"Face\",\n  // \"Teeth\",\n  // \"Lips\",\n  // \"Mouth\",\n  // \"Ears\",\n  // \"Torso\",\n];\n\nexport const fixEyes = (mesh: AbstractMesh) => {\n  // console.log(mesh.name);\n  const textures = mesh?.material?.getActiveTextures() ?? [];\n  // textures.map((t) => console.log(\"texture: \" + t?.name));\n  if (\n    isDefined(\n      textures.find((t) => {\n        const name = t?.name;\n        return isDefined(HIDE.find((h) => name.includes(h)));\n      })\n    )\n  ) {\n    mesh.visibility = 0;\n  }\n\n  // gloss meshes\n  if (\n    isDefined(\n      textures.find((t) => {\n        const name = t?.name;\n        return isDefined(GLOSS.find((h) => name.includes(h)));\n      })\n    )\n  ) {\n    const material = mesh.material as PBRMaterial;\n    material.metallic = 1;\n    material.transparencyMode = 2;\n\n    // material.subSurface.isScatteringEnabled = true;\n    // material.subSurface.scatteringDiffusionProfile = c3(\"white\");\n    // material.albedoTexture.hasAlpha = true;\n    // material.roughness = 0.5;\n    // material.albedoColor = c3('green')\n    // material.emissiveIntensity = 1;\n    // material.emissiveColor = c3(\"white\");\n    // material.emissiveTexture = material.albedoTexture;\n    // material.roughness = 0;\n    if (material.albedoTexture) {\n      material.albedoTexture.hasAlpha = true;\n    }\n    material.clearCoat.isEnabled = true;\n    material.clearCoat.intensity = 0.2;\n    material.subSurface.isTranslucencyEnabled = true;\n    material.subSurface.translucencyIntensity = 0.5;\n    material.subSurface.translucencyIntensityTexture = material.albedoTexture;\n    material.opacityTexture = material.albedoTexture;\n    // mesh.visibility = 0;\n    // material.emissiveTexture = material.albedoTexture;\n    // material.albedoColor = c3(\"red\");\n  }\n\n  // moisture?\n  if (mesh.name === \"Genesis8Female.Shape_primitive10\") {\n    const material = mesh.material as PBRMaterial;\n    material.metallic = 0;\n    mesh.visibility = 0;\n    // // material.zOffset = -1;\n    // // material.roughness = 0.5;\n    // // material.clearCoat.isEnabled = true;\n    // // material.clearCoat.intensity = 1;\n    // // material.useLogarithmicDepth = true;\n\n    // // material.subSurface.isScatteringEnabled = true;\n    // // material.subSurface.scatteringDiffusionProfile = c3(\"grey\");\n\n    // material.transparencyMode = 2;\n    // material.clearCoat.isEnabled = true;\n    // material.clearCoat.intensity = 0.3;\n    // material.subSurface.isTranslucencyEnabled = true;\n    // material.subSurface.translucencyIntensity = 1;\n    // material.subSurface.translucencyIntensityTexture = material.albedoTexture;\n    // // material.albedoTexture.hasAlpha = true;\n\n    // // visibility controls the 'redness' of the eyes\n    // mesh.visibility = 0.4;\n    // // mesh.setEnabled(false);\n  }\n\n  // pupil mask (water layer)\n  if (mesh.name === \"Genesis8Female.Shape_primitive12\") {\n    const material = mesh.material as PBRMaterial;\n    // material.metallic = 1;\n    material.roughness = 0;\n    material.clearCoat.isEnabled = true;\n    material.clearCoat.intensity = 0.5;\n    material.subSurface.isTranslucencyEnabled = true;\n    material.subSurface.translucencyIntensity = 0.5;\n    material.subSurface.translucencyIntensityTexture = material.albedoTexture;\n    // can have the 'effect' of clouding/ disapering the iris/pupil\n    mesh.visibility = 0;\n    mesh.setEnabled(false);\n    // mesh.visibility = 1;\n  }\n\n  // iris\n  if (mesh.name === \"Genesis8Female.Shape_primitive13\") {\n    const material = mesh.material as PBRMaterial;\n    material.metallic = 0;\n  }\n\n  // sclarera\n  if (mesh.name === \"Genesis8Female.Shape_primitive14\") {\n    const material = mesh.material as PBRMaterial;\n    material.opacityTexture = null;\n    material.metallic = 0;\n    material.useAlphaFromAlbedoTexture = false;\n    if (material.albedoTexture) {\n      material.albedoTexture.level = 3;\n    }\n  }\n  // bottom edge of eyelid\n  if (mesh.name.endsWith(\"Eyelashes.Shape_primitive0\")) {\n    const material = mesh.material as PBRMaterial;\n    // material.metallic = 1;\n    material.roughness = 0.5;\n    material.clearCoat.isEnabled = true;\n    material.clearCoat.intensity = 0.5;\n    material.subSurface.isTranslucencyEnabled = true;\n    material.subSurface.translucencyIntensity = 0.5;\n    material.subSurface.translucencyIntensityTexture = material.albedoTexture;\n    // material.albedoColor = new Color3(0.5, 0.5, 0.5);\n    mesh.visibility = 0.2;\n    // mesh.visibility = 0.5;\n    // mesh.visibility = 0.5;\n  }\n\n  mesh.getChildMeshes().map(fixEyes);\n};\n"]}