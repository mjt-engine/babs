{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../src/model/builder.ts"],"names":[],"mappings":"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","sourcesContent":["import { isDefined, isUndefined } from \"@mjt-engine/object\";\nimport { Randoms } from \"@mjt-engine/random\";\nimport { c3 } from \"../bab/c3\";\nimport { c4 } from \"../bab/c4\";\nimport { createEngine } from \"../bab/createEngine\";\nimport { renderOnce } from \"../bab/renderOnce\";\nimport { v3 } from \"../bab/v3\";\nimport { attachArcRotateCameraControls } from \"../camera/attachArcRotateCameraControls\";\nimport { attachUniversalCameraControls } from \"../camera/attachUniversalCameraControls\";\nimport { describeMesh } from \"../mesh/describeMesh\";\nimport { imageToTexture } from \"../texture/imageToTexture\";\nimport type { ModelBuilder, ModelPath, MorphRemaps } from \"./ModelBuilder\";\nimport { addDefaultLightsToScene } from \"./addDefaultLightsToScene\";\nimport { loadDazFigure } from \"./loadDazFigure\";\nimport { meshFixer } from \"./meshFixer\";\nimport { performMorph } from \"./performMorph\";\nimport { pickMesh } from \"./pickMesh\";\nimport { totalBoundingInfo } from \"./totalBoundingInfo\";\nimport { updateColor } from \"./updateColor\";\nimport { updateTranslucency } from \"./updateTranslucency\";\nimport { Scene } from \"@babylonjs/core/scene\";\nimport { ImageProcessingConfiguration } from \"@babylonjs/core/Materials/imageProcessingConfiguration\";\nimport { HighlightLayer } from \"@babylonjs/core/Layers/highlightLayer\";\nimport { UniversalCamera } from \"@babylonjs/core/Cameras/universalCamera\";\nimport { MeshBuilder } from \"@babylonjs/core/Meshes/meshBuilder\";\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial\";\nimport type { FreeCamera } from \"@babylonjs/core/Cameras/freeCamera\";\nimport { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial\";\nimport type { Texture } from \"@babylonjs/core/Materials/Textures/texture\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\n\nexport const builder = async (\n  props: {\n    scene?: Scene;\n    path?: ModelPath;\n    exposure?: number;\n    toneMappingEnabled?: boolean;\n    addDefaultLights?: boolean;\n    clearColor?: string;\n  } = {}\n): Promise<ModelBuilder> => {\n  const {\n    path = [],\n    exposure = 1.6,\n    toneMappingEnabled = true,\n    addDefaultLights = false,\n    clearColor = \"grey\",\n    scene = new Scene(createEngine()),\n  } = props;\n  const paths = Array.isArray(path) ? path : [path];\n  await Promise.all(\n    paths.map(async (path) => {\n      await loadDazFigure({ scene, path });\n    })\n  );\n  // scene.clearColor = c4(clearColor);\n  // scene.autoClear = true;\n\n  scene.imageProcessingConfiguration.exposure = exposure;\n  scene.imageProcessingConfiguration.toneMappingEnabled = toneMappingEnabled;\n  scene.imageProcessingConfiguration.toneMappingType =\n    ImageProcessingConfiguration.TONEMAPPING_ACES;\n\n  const highlightLayer = new HighlightLayer(\"highlightLayer\", scene);\n\n  // const camera = new UniversalCamera(\"camera1\", v3(0, 1, 1), scene);\n  // scene.activeCamera = camera;\n  if (addDefaultLights) {\n    addDefaultLightsToScene(scene);\n  }\n  // camera.minZ = 0;\n  const STATE = {\n    lock: undefined as string | undefined,\n    remaps: {} as MorphRemaps,\n  };\n\n  const b: ModelBuilder = {\n    addTestCube: () => {\n      const testCube = MeshBuilder.CreateBox(\"testCube\");\n      testCube.material = new StandardMaterial(\"testCube\");\n      testCube.material.wireframe = true;\n      scene.addMesh(testCube);\n      return b;\n    },\n    render: () => {\n      scene.render();\n      return b;\n    },\n    lock: (id = Randoms.randomUuid()) => {\n      if (isDefined(STATE.lock) && STATE.lock !== id) {\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            resolve(b.lock(id));\n          }, 1);\n        });\n      }\n      STATE.lock = id;\n      return Promise.resolve(id);\n    },\n    unlock: (id) => {\n      if (STATE.lock !== id) {\n        console.log({ STATE, id });\n        throw new Error(\"Unable to unlock with wrong lock id\");\n      }\n      STATE.lock = undefined;\n      return b;\n    },\n    camera: (x, y, z) => {\n      if (!scene.activeCamera) {\n        throw new Error(\"no activeCamera in scene\", { cause: scene });\n      }\n      scene.activeCamera.position = v3(x, y, z);\n      return b;\n    },\n    lookAt: (x, y, z) => {\n      const camera = scene.activeCamera as FreeCamera;\n      camera.setTarget(v3(x, y, z));\n      return b;\n    },\n    startRenderLoop: () => {\n      scene.getEngine().runRenderLoop(() => {\n        scene.render();\n      });\n      return b;\n    },\n    attachControls: () => {\n      if (scene.activeCamera instanceof UniversalCamera) {\n        attachUniversalCameraControls(scene.activeCamera);\n      }\n      if (scene.activeCamera instanceof ArcRotateCamera) {\n        attachArcRotateCameraControls(scene.activeCamera);\n      }\n      return b;\n    },\n    takeCanvas: async (\n      // const engine = scene.getEngine()\n      width = scene?.getEngine()?.getRenderingCanvas()?.width ?? 256,\n      height = scene?.getEngine()?.getRenderingCanvas()?.height ?? 256\n    ) => {\n      const canvas = scene.getEngine().getRenderingCanvas();\n      if (!canvas) {\n        throw new Error(\"No canvas for engine\", { cause: scene });\n      }\n      canvas.width = width;\n      canvas.height = height;\n      await renderOnce(scene);\n      const result = document.createElement(\"canvas\");\n      result.width = canvas.width;\n      result.height = canvas.height;\n      result.getContext(\"2d\")!.drawImage(canvas, 0, 0);\n      return result;\n    },\n    reset: () => {\n      b.camera(0, 1, 2.5);\n      b.lookAt(0, 1, 0);\n\n      return b;\n    },\n    describe: (what = \"meshmorphcamlightanim\", search = /.*/) => {\n      what = what.toLocaleLowerCase();\n\n      if (what.includes(\"anim\")) {\n        console.log(\"--START Animations ---\");\n        scene.animationGroups.forEach((animationGroup) => {\n          console.log({ animationGroup });\n        });\n        console.log(\"--END Animations ---\");\n      }\n\n      if (what.includes(\"morph\")) {\n        console.log(\"--START MORPH TARGETS---\");\n        const result = new Set<string>();\n        scene.morphTargetManagers.map((manager) => {\n          for (let i = 0; i < manager.numTargets; i++) {\n            const target = manager.getTarget(i);\n            if (search.test(target.name)) {\n              result.add(target.name);\n            }\n          }\n        });\n        result.forEach((name) => console.log(name));\n        console.log(\"--END MORPH TARGETS---\");\n      }\n      if (what.includes(\"mesh\")) {\n        console.log(\"--START MESHEs---\");\n        scene.meshes.forEach((mesh) => describeMesh(mesh, search));\n        console.log(\"--END MESHES---\");\n      }\n      if (what.includes(\"cam\")) {\n        console.log(\"--START CAMERAS---\");\n        scene.cameras.forEach((camera) => console.log({ camera }));\n        console.log(\"--END CAMERAS---\");\n      }\n      if (what.includes(\"light\")) {\n        console.log(\"--START LIGHTS---\");\n        scene.lights.forEach((light) => console.log({ light }));\n        console.log(\"--END LIGHTS---\");\n      }\n      return b;\n    },\n    updateColor: (color, textureMatcher = /.*/, meshMatcher = /.*/) => {\n      scene.meshes.forEach((mesh) =>\n        updateColor({ color, mesh, meshMatcher, textureMatcher })\n      );\n      return b;\n    },\n    updateTranslucency: (value, textureMatcher = /.*/, meshMatcher = /.*/) => {\n      // scene.enableSubSurfaceForPrePass().metersPerUnit = 0.4;\n      // scene.prePassRenderer.samples = 2;\n      scene.meshes.forEach((mesh) =>\n        updateTranslucency({ value, mesh, meshMatcher, textureMatcher })\n      );\n      return b;\n    },\n    gotoFrame: (frame) => {\n      return new Promise((resolve, reject) => {\n        const anim = scene.getAnimationGroupByName(\"Animation\");\n        if (!anim) {\n          throw new Error(\"No animation group\", { cause: scene });\n        }\n        anim.stop();\n        anim.start(false, 0.1, frame / 30, frame / 30);\n        anim.onAnimationEndObservable.addOnce(() => {\n          resolve();\n        });\n      });\n    },\n    morph: (influences) => {\n      performMorph(scene, influences, STATE.remaps);\n      return b;\n    },\n    fix: (mapper) => {\n      scene.meshes.forEach((mesh) => meshFixer(mesh, mapper));\n      return b;\n    },\n    fixMesh: (mesh, mapper) => {\n      meshFixer(mesh, mapper);\n      return b;\n    },\n    fixMaterial: (mesh, mapper) => {\n      meshFixer(mesh, (me) => {\n        if (mesh.material instanceof PBRMaterial) {\n          mesh.material = mapper(mesh.material);\n        }\n        return me;\n      });\n      return b;\n    },\n    fixTexture: (material, mapper) => {\n      material.getActiveTextures().map((tex) => {\n        mapper(tex as Texture);\n      });\n      return b;\n    },\n    color3: c3,\n    color4: c4,\n    createTexture: async (image, name = `texture-${Randoms.randomUuid()}`) => {\n      return imageToTexture(scene, name, image);\n    },\n    append: async (path, name) => {\n      const paths = Array.isArray(path) ? path : [path];\n      await Promise.all(\n        paths.map(async (path) => {\n          await loadDazFigure({ scene, path, name });\n        })\n      );\n      return b;\n    },\n    getMorphs: (search = /.*/) => {\n      const result = new Set<string>();\n      scene.morphTargetManagers.map((manager) => {\n        for (let i = 0; i < manager.numTargets; i++) {\n          const target = manager.getTarget(i);\n          if (search.test(target.name)) {\n            result.add(target.name);\n          }\n        }\n      });\n\n      return Array.from(result);\n    },\n    getModelNames: () => {\n      // TODO better way to isolate top-level model meshes in scene\n      return scene.meshes.map((m) => m.name).filter((n) => n.endsWith(\".glb\"));\n    },\n    addMorphRemaps: (remaps) => {\n      STATE.remaps = { ...STATE.remaps, ...remaps };\n      return b;\n    },\n    setClearColor: (color) => {\n      scene.clearColor = c4(color);\n      return b;\n    },\n    setRotation: (model, rotation) => {\n      const mesh = scene.meshes.find((m) => m.name === model);\n      if (isUndefined(mesh)) {\n        return b;\n      }\n      mesh.rotation = v3(0, rotation, 0);\n      return b;\n    },\n    getBBox: (model) => {\n      const mesh = scene.getMeshByName(model);\n      if (!mesh) {\n        throw new Error(`no mesh in scene by name: ${model}`, { cause: scene });\n      }\n      return totalBoundingInfo(mesh.getChildMeshes()).boundingBox;\n    },\n    wireframe: () => {\n      scene.meshes.forEach((mesh) => {\n        if (isUndefined(mesh.material)) {\n          mesh.material = new StandardMaterial(`mat-${mesh.name}`, scene);\n        }\n        if (!mesh.material) {\n          throw new Error(\"no material on mesh\", { cause: mesh });\n        }\n        mesh.material.wireframe = true;\n      });\n      return b;\n    },\n    pickMesh: (x, y, predicate) => {\n      return pickMesh(scene, x, y, { predicate });\n    },\n    highlight: (mesh, color) => {\n      if (mesh instanceof Mesh) {\n        highlightLayer.addMesh(mesh, c3(color));\n      }\n      return b;\n    },\n    unHighlight: (mesh) => {\n      if (isUndefined(mesh)) {\n        highlightLayer.removeAllMeshes();\n        return b;\n      }\n      if (mesh instanceof Mesh) {\n        highlightLayer.removeMesh(mesh);\n      }\n      return b;\n    },\n  };\n  // b.reset();\n  return b;\n};\n"]}