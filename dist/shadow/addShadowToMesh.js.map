{"version":3,"file":"addShadowToMesh.js","sourceRoot":"","sources":["../../src/shadow/addShadowToMesh.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AAEpE,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAA0B,EAAE,EAAE;IAC5D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC9B,MAAM,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IAC5D,aAAa,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QAC/B,MAAM,eAAe,GAAG,MAAM,CAAC,QAAQ,CACrC,iBAAiB,CACC,CAAC;QACrB,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IACH,OAAO,GAAG,EAAE;QACV,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ShadowGenerator } from \"@babylonjs/core/Lights/Shadows/shadowGenerator\";\nimport type { InstancedMesh } from \"@babylonjs/core/Meshes/instancedMesh\";\nimport type { Mesh } from \"@babylonjs/core/Meshes/mesh\";\nimport { removeShadowFromMesh } from \"../mesh/removeShadowFromMesh\";\n\nexport const addShadowToMesh = (mesh: Mesh | InstancedMesh) => {\n  const scene = mesh.getScene();\n  const shadowCasters = scene.getLightsByTags(\"shadowCaster\");\n  shadowCasters.forEach((caster) => {\n    const shadowGenerator = caster.metadata[\n      \"shadowGenerator\"\n    ] as ShadowGenerator;\n    shadowGenerator.addShadowCaster(mesh);\n  });\n  return () => {\n    removeShadowFromMesh(mesh);\n  };\n};\n"]}